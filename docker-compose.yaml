version: '3.8'

services:
  db:
    image: postgres:12.0-alpine
    environment:
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    container_name: db
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 3s
      timeout: 3s
      retries: 3

  migrations:
    build:
      context: .
    container_name: migrations
    command: sh -c "./manage.py makemigrations && ./manage.py migrate"
    depends_on:
      db:
        condition: service_healthy

  api:
    build:
      context: .
    container_name: api
    env_file:
      - .env.todolist
    command: sh -c "./manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      migrations:
        condition: service_completed_successfully

  frontend:
    image: sermalenk/skypro-front:lesson-34
    container_name: front
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started

volumes:
  postgres_data: