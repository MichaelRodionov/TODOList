version: '3.8'

services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todo_list
    container_name: db
    restart: always
    healthcheck:
      test: pg_isready -U postgres -d todo_list
      interval: 3s
      timeout: 3s
      retries: 3

  migrations:
    build:
      context: .
    container_name: migrations
    env_file:
      - .env
    command: >
      sh -c "./manage.py makemigrations && ./manage.py migrate"
    depends_on:
      db:
        condition: service_healthy

  api:
    build:
      context: .
    container_name: api
    env_file:
      - .env
    command: >
      sh -c "gunicorn -b 0.0.0.0:8000 todolist.wsgi"
    ports:
      - "8000:8000"
    depends_on:
      migrations:
        condition: service_completed_successfully

  front:
    image: sermalenk/skypro-front:lesson-38
    container_name: front
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  bot:
    build:
      context: .
    container_name: tg_bot
    env_file:
      - .env
    command: >
      sh -c "./manage.py runbot"
    depends_on:
      migrations:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    volumes:
      - ./bot:/bot

  postgres_adminer:
    container_name: postgres_adminer
    image: adminer
    restart: always
    ports:
      - "8080:8080"
