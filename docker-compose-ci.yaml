version: '3.8'

services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    container_name: db
    restart: always
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 3s
      timeout: 3s
      retries: 3

  migrations:
    image: ${DOCKERHUB_USERNAME}/todolist_docker:${GITHUB_REF_NAME}-${GITHUB_RUN_ID}
    container_name: migrations
    env_file:
      - .env
    command: >
      sh -c "./manage.py makemigrations && ./manage.py migrate"
    volumes:
      - .env:/todo_list_app/.env
    depends_on:
      db:
        condition: service_healthy

  api:
    image: ${DOCKERHUB_USERNAME}/todolist_docker:${GITHUB_REF_NAME}-${GITHUB_RUN_ID}
    container_name: api
    env_file:
      - .env
    command: >
      sh -c "./manage.py collectstatic -c --no-input
      && gunicorn -b 0.0.0.0:8000 todolist.wsgi"
    ports:
      - "8000:8000"
    volumes:
      - .env:/todo_list_app/.env
      - django_static:/todo_list_app/static
    depends_on:
      migrations:
        condition: service_completed_successfully

  front:
    image: sermalenk/skypro-front:lesson-37
    container_name: front
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static

volumes:
  django_static: